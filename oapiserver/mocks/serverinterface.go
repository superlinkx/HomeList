// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
	oapiserver "github.com/superlinkx/HomeList/oapiserver"
)

// MockServerInterface is an autogenerated mock type for the ServerInterface type
type MockServerInterface struct {
	mock.Mock
}

type MockServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockServerInterface) EXPECT() *MockServerInterface_Expecter {
	return &MockServerInterface_Expecter{mock: &_m.Mock}
}

// CreateList provides a mock function with given fields: w, r
func (_m *MockServerInterface) CreateList(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// MockServerInterface_CreateList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateList'
type MockServerInterface_CreateList_Call struct {
	*mock.Call
}

// CreateList is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *MockServerInterface_Expecter) CreateList(w interface{}, r interface{}) *MockServerInterface_CreateList_Call {
	return &MockServerInterface_CreateList_Call{Call: _e.mock.On("CreateList", w, r)}
}

func (_c *MockServerInterface_CreateList_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *MockServerInterface_CreateList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *MockServerInterface_CreateList_Call) Return() *MockServerInterface_CreateList_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_CreateList_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *MockServerInterface_CreateList_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteList provides a mock function with given fields: w, r, listID
func (_m *MockServerInterface) DeleteList(w http.ResponseWriter, r *http.Request, listID int64) {
	_m.Called(w, r, listID)
}

// MockServerInterface_DeleteList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteList'
type MockServerInterface_DeleteList_Call struct {
	*mock.Call
}

// DeleteList is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - listID int64
func (_e *MockServerInterface_Expecter) DeleteList(w interface{}, r interface{}, listID interface{}) *MockServerInterface_DeleteList_Call {
	return &MockServerInterface_DeleteList_Call{Call: _e.mock.On("DeleteList", w, r, listID)}
}

func (_c *MockServerInterface_DeleteList_Call) Run(run func(w http.ResponseWriter, r *http.Request, listID int64)) *MockServerInterface_DeleteList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(int64))
	})
	return _c
}

func (_c *MockServerInterface_DeleteList_Call) Return() *MockServerInterface_DeleteList_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_DeleteList_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, int64)) *MockServerInterface_DeleteList_Call {
	_c.Call.Return(run)
	return _c
}

// GetList provides a mock function with given fields: w, r, listID
func (_m *MockServerInterface) GetList(w http.ResponseWriter, r *http.Request, listID int64) {
	_m.Called(w, r, listID)
}

// MockServerInterface_GetList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetList'
type MockServerInterface_GetList_Call struct {
	*mock.Call
}

// GetList is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - listID int64
func (_e *MockServerInterface_Expecter) GetList(w interface{}, r interface{}, listID interface{}) *MockServerInterface_GetList_Call {
	return &MockServerInterface_GetList_Call{Call: _e.mock.On("GetList", w, r, listID)}
}

func (_c *MockServerInterface_GetList_Call) Run(run func(w http.ResponseWriter, r *http.Request, listID int64)) *MockServerInterface_GetList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(int64))
	})
	return _c
}

func (_c *MockServerInterface_GetList_Call) Return() *MockServerInterface_GetList_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetList_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, int64)) *MockServerInterface_GetList_Call {
	_c.Call.Return(run)
	return _c
}

// GetLists provides a mock function with given fields: w, r, params
func (_m *MockServerInterface) GetLists(w http.ResponseWriter, r *http.Request, params oapiserver.GetListsParams) {
	_m.Called(w, r, params)
}

// MockServerInterface_GetLists_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetLists'
type MockServerInterface_GetLists_Call struct {
	*mock.Call
}

// GetLists is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - params oapiserver.GetListsParams
func (_e *MockServerInterface_Expecter) GetLists(w interface{}, r interface{}, params interface{}) *MockServerInterface_GetLists_Call {
	return &MockServerInterface_GetLists_Call{Call: _e.mock.On("GetLists", w, r, params)}
}

func (_c *MockServerInterface_GetLists_Call) Run(run func(w http.ResponseWriter, r *http.Request, params oapiserver.GetListsParams)) *MockServerInterface_GetLists_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(oapiserver.GetListsParams))
	})
	return _c
}

func (_c *MockServerInterface_GetLists_Call) Return() *MockServerInterface_GetLists_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_GetLists_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, oapiserver.GetListsParams)) *MockServerInterface_GetLists_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateList provides a mock function with given fields: w, r, listID
func (_m *MockServerInterface) UpdateList(w http.ResponseWriter, r *http.Request, listID int64) {
	_m.Called(w, r, listID)
}

// MockServerInterface_UpdateList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateList'
type MockServerInterface_UpdateList_Call struct {
	*mock.Call
}

// UpdateList is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - listID int64
func (_e *MockServerInterface_Expecter) UpdateList(w interface{}, r interface{}, listID interface{}) *MockServerInterface_UpdateList_Call {
	return &MockServerInterface_UpdateList_Call{Call: _e.mock.On("UpdateList", w, r, listID)}
}

func (_c *MockServerInterface_UpdateList_Call) Run(run func(w http.ResponseWriter, r *http.Request, listID int64)) *MockServerInterface_UpdateList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(int64))
	})
	return _c
}

func (_c *MockServerInterface_UpdateList_Call) Return() *MockServerInterface_UpdateList_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockServerInterface_UpdateList_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, int64)) *MockServerInterface_UpdateList_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockServerInterface creates a new instance of MockServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServerInterface {
	mock := &MockServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
