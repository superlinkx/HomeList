// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	model "github.com/superlinkx/HomeList/app/model"
)

// MockReflow is an autogenerated mock type for the Reflow type
type MockReflow struct {
	mock.Mock
}

type MockReflow_Expecter struct {
	mock *mock.Mock
}

func (_m *MockReflow) EXPECT() *MockReflow_Expecter {
	return &MockReflow_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: items
func (_m *MockReflow) Execute(items []model.Item) {
	_m.Called(items)
}

// MockReflow_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockReflow_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - items []model.Item
func (_e *MockReflow_Expecter) Execute(items interface{}) *MockReflow_Execute_Call {
	return &MockReflow_Execute_Call{Call: _e.mock.On("Execute", items)}
}

func (_c *MockReflow_Execute_Call) Run(run func(items []model.Item)) *MockReflow_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]model.Item))
	})
	return _c
}

func (_c *MockReflow_Execute_Call) Return() *MockReflow_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReflow_Execute_Call) RunAndReturn(run func([]model.Item)) *MockReflow_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockReflow creates a new instance of MockReflow. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockReflow(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockReflow {
	mock := &MockReflow{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
